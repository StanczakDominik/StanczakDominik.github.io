<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mostly Plasma Physics</title><link>https://stanczakdominik.github.io/</link><description>Puns, plasmas, Python, PDEs and potentiallybifurcations</description><atom:link href="https://stanczakdominik.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:stanczakdominik@gmail.com"&gt;Dominik Stańczak&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Thu, 07 May 2020 22:33:39 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>First JOSS review!</title><link>https://stanczakdominik.github.io/posts/first-joss-review/</link><dc:creator>Dominik Stańczak</dc:creator><description>&lt;div&gt;&lt;p&gt;Several months ago, I stumbled upon &lt;a href="https://www.youtube.com/watch?v=Y4eKWN_eAxM"&gt;the journal they call
Joss&lt;/a&gt;. Well, actually, &lt;a href="https://joss.theoj.org/"&gt;JOSS - the
Journal of Open Source Software, "a developer friendly, open access journal for
research software packages"&lt;/a&gt;. It's a completely free,
open-source and open-access alternative to established,
&lt;a href="https://www.theguardian.com/science/2017/jun/27/profitable-business-scientific-publishing-bad-for-science"&gt;for-(often-a-lot-of)-profit&lt;/a&gt;
journals such as those by Reed-Elsevier or Springer.&lt;/p&gt;
&lt;p&gt;And a few days ago, &lt;a href="https://github.com/openjournals/joss-reviews/issues/2133#issuecomment-618617823"&gt;I've been called into
service&lt;/a&gt;
to review &lt;a href="https://github.com/joglekara/VlaPy"&gt;VlaPy, "1D-1V Vlasov-Poisson(-Fokker-Planck) Plasma Physics
Simulation Tool"&lt;/a&gt;. While I'm digging into that code, I thought I'd write something up about JOSS in general!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stanczakdominik.github.io/posts/first-joss-review/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>article</category><category>joss</category><guid>https://stanczakdominik.github.io/posts/first-joss-review/</guid><pubDate>Sat, 02 May 2020 17:55:00 GMT</pubDate></item><item><title>Recent happenings</title><link>https://stanczakdominik.github.io/posts/recent-happenings/</link><dc:creator>Dominik Stańczak</dc:creator><description>&lt;div&gt;&lt;p&gt;Just grasshopper noise since February, huh? There goes my new year's resolution.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stanczakdominik.github.io/posts/recent-happenings/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://stanczakdominik.github.io/posts/recent-happenings/</guid><pubDate>Wed, 22 Apr 2020 16:08:57 GMT</pubDate></item><item><title>Export YouTube's Watch Later playlist</title><link>https://stanczakdominik.github.io/posts/youtube-watch-later-export.rst/</link><dc:creator>Dominik Stańczak</dc:creator><description>&lt;div&gt;&lt;p&gt;YouTube is increasingly becoming a walled garden. One of the dark patterns I see in it is that the Watch Later playlist, which you may have gathered over what feels like a millenia (so many lectures, so little time...), cannot be exported - you can only add one video at a time to another playlist. That obviously doesn't scale. Here's a quick trick to solve that!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stanczakdominik.github.io/posts/youtube-watch-later-export.rst/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://stanczakdominik.github.io/posts/youtube-watch-later-export.rst/</guid><pubDate>Mon, 17 Feb 2020 17:00:00 GMT</pubDate></item><item><title>Self-organized criticality - student project post-mortem</title><link>https://stanczakdominik.github.io/posts/self-organized-criticality-student-project-post-mortem/</link><dc:creator>Dominik Stańczak</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;We just got finished with our student team project, which you can find &lt;a href="https://socsim.readthedocs.io/"&gt;here&lt;/a&gt;, and I thought I'd do a little post mortem on it.&lt;/p&gt;
&lt;p&gt;It's a neat little project that implements various simulations of self organized criticality on 2D grids. What is self organized criticality, you might ask? Dunno, I can't tell you.&lt;/p&gt;
&lt;p&gt;All right, I do know a little. Imagine the ising system I've written about before. In the version without an external magnetic field, it has a single important parameter that we can set - the temperature. If you sweep through the values of temperature, you can find a single point where the behavior of the system changes qualitatively - order wins over disorder at temperatures below roughly 2.72 in reasonable [set everything to 1] units. Near that value - at criticality - you get large scale behavior, huge fluctuations, exponential slowdowns, etc.&lt;/p&gt;
&lt;p&gt;Self organized criticality, as I currently understand it, is basically that, except that as you run your simulation, you realize that it displays criticality for a wide range of parameters (here - temperature). To quote &lt;a href="https://en.wikipedia.org/w/index.php?title=Self-organized_criticality&amp;amp;oldid=929733066"&gt;Wikipedia&lt;/a&gt; (emphasis mine):&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;the complexity observed emerged in a robust manner that did not depend on finely tuned details of the system: variable parameters in the model could be changed widely without affecting the emergence of critical behavior: hence, self-organized criticality.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://stanczakdominik.github.io/posts/self-organized-criticality-student-project-post-mortem/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://stanczakdominik.github.io/posts/self-organized-criticality-student-project-post-mortem/</guid><pubDate>Tue, 11 Feb 2020 20:45:00 GMT</pubDate></item><item><title>Update on the year 2019</title><link>https://stanczakdominik.github.io/posts/update-on-the-year-2019/</link><dc:creator>Dominik Stańczak</dc:creator><description>&lt;div&gt;&lt;p&gt;2019 has been a weird year.&lt;/p&gt;
&lt;p&gt;I don't feel like it's been all too good for my mental health, as I've definitely experienced burnout, mayhaps even depression. Suffice to say, the lows were low. I feel a bit like I procrastinated all there was to procrastinate.&lt;/p&gt;
&lt;p&gt;It wasn't all bad, though - I'd say it was right up there in my top 25.&lt;/p&gt;
&lt;p&gt;In trying to get some more work-life balance, I did get back to playing StarCraft - I'd cut it out of my life previously, along with all gaming - but I figured I do need some of that competitive drive in my life, and I still think there's a lot it can still teach me. You wouldn't drop chess from your life if you were passionate about it, right? So far, it's been treating me all right.&lt;/p&gt;
&lt;p&gt;At the start of December, I started a research software job at the Institute for Plasma Physics and Laser Microfusion here in Warsaw, Poland! This is also where I'll be writing and developing my master's thesis, related to Bayesian inference for plasma diagnostics on Wendelstein 7-x, using Python and more specifically PyMC3. A step forwards for modern, open, reproducible and maintainable science software! At least, I hope so. :)&lt;/p&gt;
&lt;p&gt;I was planning on putting some photos, stats etc here, but I haven't found the time to get to do those yet (remember all that procrastination? Yeah, it's coming back to bite me in the predictive posterior), and &lt;a class="reference external" href="https://matthewrocklin.com/blog/work/2019/06/25/write-short-blogposts"&gt;Matthew Rocklin says I should write shorter blog posts more frequently&lt;/a&gt;, anyway, and that sounds like good advice.&lt;/p&gt;
&lt;p&gt;Thus, to  get this out the door more quickly... onwards to 2020!&lt;/p&gt;&lt;/div&gt;</description><guid>https://stanczakdominik.github.io/posts/update-on-the-year-2019/</guid><pubDate>Thu, 30 Jan 2020 17:00:00 GMT</pubDate></item><item><title>Better Numba calculation of inter-particle distance matrices</title><link>https://stanczakdominik.github.io/posts/distance-matrix-numba/</link><dc:creator>Dominik Stańczak</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Recently, I've been looking for efficient ways to compute a &lt;a href="https://en.wikipedia.org/wiki/Distance_matrix"&gt;distance matrix&lt;/a&gt; in Python. I'm deliberately trying to implement a naive n-body simulation so as to find optimized ways of calculating those, as practice. Let's do that using Numba.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stanczakdominik.github.io/posts/distance-matrix-numba/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>nbody</category><category>numba</category><category>python</category><category>simulation</category><guid>https://stanczakdominik.github.io/posts/distance-matrix-numba/</guid><pubDate>Thu, 25 Jul 2019 06:00:00 GMT</pubDate></item><item><title>Simple Binder usage with Sphinx-Gallery through Jupytext</title><link>https://stanczakdominik.github.io/posts/simple-binder-usage-with-sphinx-gallery-through-jupytext/</link><dc:creator>Dominik Stańczak</dc:creator><description>&lt;div&gt;&lt;p&gt;It's been a busy week for &lt;a class="reference external" href="https://github.com/PlasmaPy/PlasmaPy/"&gt;PlasmaPy&lt;/a&gt;. I recently found out about Binder support in &lt;a class="reference external" href="https://sphinx-gallery.github.io/"&gt;sphinx-gallery&lt;/a&gt;. The latter is a package that we use to
turn python scripts with comments into Sphinx pages and Jupyter Notebooks. I figured adding that could be a nice fit for &lt;a class="reference external" href="http://docs.plasmapy.org/en/stable/auto_examples/index.html"&gt;our existing example gallery&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;However, I quickly realized that the system in place is a bit unwieldy. Binder takes a link to an existing GitHub repository and executes &lt;code class="docutils literal"&gt;.ipynb&lt;/code&gt; notebooks located there online. However, with sphinx-gallery, we don't have those notebooks in the repository - we have &lt;code class="docutils literal"&gt;.py&lt;/code&gt; files with comments. &lt;a class="reference external" href="https://sphinx-gallery.github.io/configuration.html#binder-links"&gt;The currently recommended way of setting this up with sphinx-gallery&lt;/a&gt; is keeping your built documentation in &lt;a class="reference external" href="https://github.com/sphinx-gallery/sphinx-gallery.github.io"&gt;another repository&lt;/a&gt; and hosting it via something along the lines of GitHub Pages rather than &lt;a class="reference external" href="https://readthedocs.org/"&gt;ReadTheDocs&lt;/a&gt;, which we are currently using.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/sphinx-gallery/sphinx-gallery/pull/505/files"&gt;I added the results of this investigation to sphinx-gallery's docs&lt;/a&gt;, but I didn't want to switch away from RTD, so I figured I'd go ahead and find another way. I think I've got something that works well enough now!&lt;/p&gt;
&lt;p&gt;Trigger warning: later on during this post, there may be monkeypatching of sphinx_gallery internals. Beware.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stanczakdominik.github.io/posts/simple-binder-usage-with-sphinx-gallery-through-jupytext/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>maintenance</category><category>plasmapy</category><category>python</category><category>sphinx</category><guid>https://stanczakdominik.github.io/posts/simple-binder-usage-with-sphinx-gallery-through-jupytext/</guid><pubDate>Sat, 06 Jul 2019 14:00:00 GMT</pubDate></item><item><title>Post mortem for my engineering thesis code, PythonPIC</title><link>https://stanczakdominik.github.io/posts/post-mortem-for-my-engineering-thesis-code-pythonpic/</link><dc:creator>Dominik Stańczak</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm giving a presentation on this less-than-glorious subject on Friday, so
I figured, hey, it might be a nice time to write a summary of what &lt;a href="https://github.com/StanczakDominik/PythonPIC"&gt;that old
repository on my GitHub page&lt;/a&gt; is. In a single video:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;center&gt;&lt;iframe width="800" height="450" src="https://www.youtube-nocookie.com/embed/rE4-X-jNoFw" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;p&gt;Admittedly, this post is going to be rather personal - this messy little code
was basically my life for a few hundreds of hours.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stanczakdominik.github.io/posts/post-mortem-for-my-engineering-thesis-code-pythonpic/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>particle-in-cell</category><category>plasma</category><category>python</category><category>simulation</category><guid>https://stanczakdominik.github.io/posts/post-mortem-for-my-engineering-thesis-code-pythonpic/</guid><pubDate>Wed, 03 Apr 2019 19:15:00 GMT</pubDate></item><item><title>Changing fields</title><link>https://stanczakdominik.github.io/posts/changing-fields/</link><dc:creator>Dominik Stańczak</dc:creator><description>&lt;p&gt;Time to end my plasma endeavors. It turns out the field of &lt;em&gt;biology&lt;/em&gt; has got &lt;a href="https://en.wikipedia.org/wiki/Blood_plasma"&gt;more plasma than the entire fusion industry combined&lt;/a&gt;. GG, see ya on the other side!&lt;/p&gt;</description><guid>https://stanczakdominik.github.io/posts/changing-fields/</guid><pubDate>Mon, 01 Apr 2019 09:00:00 GMT</pubDate></item><item><title>On the recent "On the Boris solver in Particle-in-cell simulations" paper</title><link>https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper/</link><dc:creator>Dominik Stańczak</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I recently came across &lt;a href="https://arxiv.org/abs/1809.04378"&gt;a pretty cool paper by Zenitani and Umeda named "On the Boris solver in particle-in-cell simulation"&lt;/a&gt;. There are many splendid descriptions of the Boris solver on the Internet, so while I would rather not duplicate them, here's a brief overview. In PIC simulations, the Boris solver (or pusher) is the usual algorithm of choice for moving and accelerating particles in given electric and magnetic fields.&lt;/p&gt;
&lt;p&gt;You may wonder, since the equations of motion are ordinary differential equations, what's wrong with using the usual Runge-Kutta 4 solver? As it turns out, that one has a pretty major flaw. It has great accuracy for short term calculations, but over time your particle's motion will lose energy. This is a deal breaker for periodic motion, and simulations of, for example, plasma waves need to conserve that energy to provide accurate results.&lt;/p&gt;
&lt;p&gt;Boris came up with his solver in the 1950's, and in a single sentence: the algorithm splits the acceleration via electric field into two parts and sticks a rotation about the magnetic field between them. This turns out to conserve energy and will probably come up again on this blog as I read more about symplexicity. 
&lt;/p&gt;&lt;p&gt;&lt;a href="https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper/"&gt;Read more…&lt;/a&gt; (13 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>paper</category><category>particle-in-cell</category><category>plasma</category><category>python</category><category>simulation</category><guid>https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper/</guid><pubDate>Wed, 27 Mar 2019 08:00:00 GMT</pubDate></item></channel></rss>